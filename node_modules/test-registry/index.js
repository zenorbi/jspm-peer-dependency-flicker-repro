const ncp = require("ncp");
const path = require("path");

var testPackages = {
	"main": {
		"lookupDelay": 0,
		"lookup": {
			"1.0.0": {
				"hash": Date.now()
			}
		}
	},
	"package-a": {
		"lookupDelay": 0,
		"lookup": {
			"1.0.0": {
				"hash": Date.now()
			}
		}
	},
	"package-b": {
		"lookupDelay": 0,
		"lookup": {
			"1.0.0": {
				"hash": Date.now()
			}
		}
	},
	"multiversion": {
		"lookupDelay": 0,
		"lookup": {
			"1.2.0": {
				"hash": Date.now()
			}
		}
	}
}

function sleep(ms) {
	return new Promise(function(resolve) {
		setTimeout(resolve, ms);
	});
}

function Registry() {

}

Registry.prototype.lookup = function(packageName) {
	const package = testPackages[packageName];
	return sleep(package.lookupDelay).then(function() {
		return {versions: testPackages[packageName].lookup};
	});
};

Registry.prototype.download = function(packageName, version, hash, meta, dir) {
	const package = testPackages[packageName];
	return sleep(package.downloadDelay).then(function() {
		return new Promise(function(resolve, reject) {
			ncp(path.join(__dirname, "packages", packageName), dir, function(err) {
				if (err) reject(err);
				else resolve();
			});
		})
	});
};

Registry.testPackages = testPackages;

module.exports = Registry;